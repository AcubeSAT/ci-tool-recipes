image: docker:20.10.8

services:
  - docker:20.10.8-dind

variables:
  CPPCHECK_VERSION_TAG: '2.5'
  DOXYGEN_VERSION_TAG: '1.9.2'
  DOXYGEN_AWESOME_CSS_VERSION_TAG: '1.6.0'
  CLANG_TOOLS_VERSION_TAG: '13.0.0'
  CLANG_HTML_VERSION_TAG: '1.3.7'
  GCOVR_VERSION_TAG: '5.0'
  LCOV_VERSION_TAG: '1.15'
  IKOS_VERSION_TAG: '3.0'
  
  DOCKER_BUILDKIT: 1
  
stages:
  - prebuild
  - build
  - deploy

build-bases:
  stage: prebuild
  script:
    - export BASE_BUILD_DATE=$(date -u '+%Y%m%dZ%H-%M-%S')
    - docker build . -f base/Dockerfile --target build-base -t $CI_REGISTRY/$CI_REGISTRY_USER/build-base:$BASE_BUILD_DATE -t $CI_REGISTRY/$CI_REGISTRY_USER/build-base:latest
    - docker build . -f base/Dockerfile --target deploy-base -t $CI_REGISTRY/$CI_REGISTRY_USER/deploy-base:$BASE_BUILD_DATE -t $CI_REGISTRY/$CI_REGISTRY_USER/deploy-base:latest
    - docker save -o build-base.tar $CI_REGISTRY/$CI_REGISTRY_USER/build-base
    - docker save -o deploy-base.tar $CI_REGISTRY/$CI_REGISTRY_USER/deploy-base
  artifacts:
    paths:
      - ./build-base.tar
      - ./deploy-base.tar

cppcheck:
  stage: build
  dependencies:
    - build-bases
  script:
    - ls -1 *.tar | xargs --no-run-if-empty -I docker load -i
    - docker build . -f cppcheck/Dockerfile --build-arg CPPCHECK_VERSION_TAG=$CPPCHECK_VERSION_TAG -t $CI_REGISTRY/$CI_REGISTRY_USER/cppcheck:$CPPCHECK_VERSION_TAG
    - docker save -o cppcheck:$CPPCHECK_VERSION_TAG.tar $CI_REGISTRY/$CI_REGISTRY_USER/cppcheck:$CPPCHECK_VERSION_TAG
  artifacts:
    paths:
      - ./cppcheck:$CPPCHECK_VERSION_TAG.tar

doxygen:
  stage: build
  dependencies:
    - build-bases
  script:
    - ls -1 *.tar | xargs --no-run-if-empty -I docker load -i
    - docker build . -f doxygen/Dockerfile --build-arg DOXYGEN_VERSION_TAG=$DOXYGEN_VERSION_TAG --build-arg DOXYGEN_AWESOME_CSS_VERSION_TAG=$DOXYGEN_AWESOME_CSS_VERSION_TAG -t $CI_REGISTRY/$CI_REGISTRY_USER/doxygen:$DOXYGEN_VERSION_TAG-awesomecss-$DOXYGEN_AWESOME_CSS_VERSION_TAG
    - docker save -o doxygen:$DOXYGEN_VERSION_TAG-awesomecss-$DOXYGEN_AWESOME_CSS_VERSION_TAG.tar $CI_REGISTRY/$CI_REGISTRY_USER/doxygen:$DOXYGEN_VERSION_TAG-awesomecss-$DOXYGEN_AWESOME_CSS_VERSION_TAG
  artifacts:
    paths:
      - ./doxygen:$DOXYGEN_VERSION_TAG-awesomecss-$DOXYGEN_AWESOME_CSS_VERSION_TAG.tar

        #clang-tools:
        #  stage: build
        #  timeout: 6 hours
        #  needs:
        #    - build-bases
        #  script:
        #    - docker load -i ./*.tar
        #    - docker build . -f clang-tools/Dockerfile --build-arg CLANG_TOOLS_VERSION_TAG=$CLANG_TOOLS_VERSION_TAG --build-arg CLANG_HTML_VERSION_TAG=$CLANG_HTML_VERSION_TAG -t $CI_REGISTRY/$CI_REGISTRY_USER/clang-tools:$CLANG_TOOLS_VERSION_TAG-html-$CLANG_HTML_VERSION_TAG
        #    - docker save -o clang-tools:$CLANG_TOOLS_VERSION_TAG-html-$CLANG_HTML_VERSION_TAG.tar 
        #  artifacts:
        #    paths:
        #      - ./clang-tools:$CLANG_TOOLS_VERSION_TAG-html-$CLANG_HTML_VERSION_TAG.tar

coverage:
  stage: build
  dependencies:
    - build-bases
  script:
    - ls -1 *.tar | xargs --no-run-if-empty -I docker load -i
    - docker build . -f coverage/Dockerfile --build-arg GCOVR_VERSION_TAG=$GCOVR_VERSION_TAG --build-arg LCOV_VERSION_TAG=$LCOV_VERSION_TAG -t $CI_REGISTRY/$CI_REGISTRY_USER/coverage:gcovr-$GCOVR_VERSION_TAG-lcov-$LCOV_VERSION_TAG
    - docker save -o coverage:gcovr-$GCOVR_VERSION_TAG-lcov-$LCOV_VERSION_TAG.tar $CI_REGISTRY/$CI_REGISTRY_USER/coverage:gcovr-$GCOVR_VERSION_TAG-lcov-$LCOV_VERSION_TAG
  artifacts:
    paths:
      - ./coverage:gcovr-$GCOVR_VERSION_TAG-lcov-$LCOV_VERSION_TAG.tar

ikos:
  stage: build
  dependencies:
    - build-bases
  script:
    - ls -1 *.tar | xargs --no-run-if-empty -I docker load -i
    - docker build . -f ikos/Dockerfile --build-arg IKOS_VERSION_TAG=$IKOS_VERSION_TAG -t $CI_REGISTRY/$CI_REGISTRY_USER/ikos:$IKOS_VERSION_TAG
    - docker save -o ikos:$IKOS_VERSION_TAG.tar $CI_REGISTRY/$CI_REGISTRY_USER/ikos:$IKOS_VERSION_TAG
  artifacts:
    paths:
      - ./ikos:$IKOS_VERSION_TAG.tar

deploy-all:
  stage: deploy
  dependencies:
    - cppcheck
    - doxygen
      #    - clang-tools
    - coverage
    - ikos
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - ls -1 *.tar | xargs --no-run-if-empty -I docker load -i
    - docker push $CI_REGISTRY/$CI_REGISTRY_USER/cppcheck:$CPPCHECK_VERSION_TAG
      #    - docker push $CI_REGISTRY/$CI_REGISTRY_USER/clang-tools:$CPPCHECK_VERSION_TAG-html-$CLANG_HTML_VERSION_TAG
    - docker push $CI_REGISTRY/$CI_REGISTRY_USER/doxygen:$CPPCHECK_VERSION_TAG-awesomecss-$DOXYGEN_AWESOME_CSS_VERSION_TAG
    - docker push $CI_REGISTRY/$CI_REGISTRY_USER/coverage:gcovr-$GCOVR_VERSION_TAG-lcov-$LCOV_VERSION_TAG
    - docker push $CI_REGISTRY/$CI_REGISTRY_USER/ikos:$IKOS_VERSION_TAG
